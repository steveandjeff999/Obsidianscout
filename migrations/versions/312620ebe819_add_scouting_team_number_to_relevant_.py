"""Add scouting_team_number to relevant models for multi-tenancy

Revision ID: 312620ebe819
Revises: 210419515cc2
Create Date: 2025-07-31 00:20:57.617536

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '312620ebe819'
down_revision = '210419515cc2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Guard each ALTER with a table-exists check so upgrades succeed on DBs
    # that may not have all optional tables present.
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_tables = set(inspector.get_table_names())

    if 'activity_log' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('activity_log')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('activity_log', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    if 'alliance_selection' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('alliance_selection')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('alliance_selection', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    if 'pit_scouting_data' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('pit_scouting_data')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('pit_scouting_data', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    if 'scouting_data' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('scouting_data')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('scouting_data', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    if 'strategy_drawing' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('strategy_drawing')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('strategy_drawing', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    if 'team_list_entry' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('team_list_entry')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('team_list_entry', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    if 'user' in existing_tables:
        cols = [c['name'] for c in inspector.get_columns('user')]
        if 'scouting_team_number' not in cols:
            with op.batch_alter_table('user', schema=None) as batch_op:
                batch_op.add_column(sa.Column('scouting_team_number', sa.Integer(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_tables = set(inspector.get_table_names())

    if 'user' in existing_tables:
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    if 'team_list_entry' in existing_tables:
        with op.batch_alter_table('team_list_entry', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    if 'strategy_drawing' in existing_tables:
        with op.batch_alter_table('strategy_drawing', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    if 'scouting_data' in existing_tables:
        with op.batch_alter_table('scouting_data', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    if 'pit_scouting_data' in existing_tables:
        with op.batch_alter_table('pit_scouting_data', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    if 'alliance_selection' in existing_tables:
        with op.batch_alter_table('alliance_selection', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    if 'activity_log' in existing_tables:
        with op.batch_alter_table('activity_log', schema=None) as batch_op:
            batch_op.drop_column('scouting_team_number')

    # ### end Alembic commands ###
